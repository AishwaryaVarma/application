function onRun(context) {
  //Get selected layers
  var selection = context.selection;

  var colors = [];

  for(var i=0; i<selection.count(); i++){
    var layer = selection[i];

    var colorInfo = colorsFromLayer(context, layer)
    colors.push(colorInfo);
  }
  showSavePanelWithColorList(colors);
}

function colorsFromLayer(context, layer) {
  var color;
  var name;

  if (layer.class() == MSShapeGroup) {
    // selected layer is Shape group
    color = layer.style().fill().color();
    // Taking style id
    var styleId = layer.styleGeneric().sharedObjectID();
    // Finding style with this id and using it's name
    if (styleId != null) {
      name = context.document.documentData().layerStyles().sharedStyleWithID(styleId).name();
    } else {
      name = String(layer.parentGroup().name());
    }
  } else if (layer.class() == MSArtboardGroup) {
    // selected layer is artboard
    return colorsFromLayer(layer.layers()[0])
  }

  var hexColor = colorToHex(color);

  return {
    name: name,
    color: hexColor
  }
}

function rgbToHex(r, g, b) {
  return "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);
}

function colorToHex(color) {
  var r = parseInt(color.red()*255);
  var g = parseInt(color.green()*255);
  var b = parseInt(color.blue()*255);
  return rgbToHex(r,g,b);
}

function showSavePanelWithColorList(colors) {
  var savePanel = NSSavePanel.savePanel();
  savePanel.setNameFieldStringValue("colors.json");
  if (savePanel.runModal() == NSFileHandlingPanelOKButton) {
   var path = savePanel.URL().path();
   var fileData = { "colors" : colors };
   var file = NSString.stringWithString(JSON.stringify(fileData))
   [file writeToFile:path atomically:true encoding:NSUTF8StringEncoding error:null];
 } else { 
    NSApp.displayDialog("There are no layers to export."); 
  }
}